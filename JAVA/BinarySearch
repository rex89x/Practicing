//Iterative
public class Iterative {
    static public int Search(int[] array, int num)
    {
        int left = 0, right = array.length - 1;
        while (left <= right)
        {
            int middle = (right + left) / 2;
 
            if (array[middle] == num)
                return middle;
 
            if (array[middle] > num)
                right = middle - 1;
            else
                left = middle + 1;
        }
        return -1;
    }
}



//Divide and conquer
public class DivideAndConquer {
    static public int Search(int[] array, int num)
    {
        return Search(array, num, 0, array.length - 1);
    }
 
    static public int Search(int[] array, int num, int left, int right)
    {
        if (left > right)
            return -1;
 
        int middle = (right + left) / 2;
 
        if (array[middle] == num)
            return middle;
 
        if (array[middle] > num)
            return Search(array, num, left, middle - 1);
 
        return Search(array, num, middle + 1, right);
    }
}
