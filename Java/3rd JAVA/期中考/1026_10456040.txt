class Customer {
    private String cusName;
    private String tel;
    private String address;

    //建構元
    public Customer(String cusName, String tel, String address){
        this.cusName=cusName;
        this.tel=tel;
        this.address=address;
    }
    
    //建構元
    public Customer(){
        this.cusName=null;
        this.tel=null;
        this.address=null;
    } 
    
    //getters
    public String getCusName(){
        return this.cusName;
    }
    
    public String getTel(){
        return this.tel;
    }
    
    public String getAddress(){
        return this.address;
    }    
    
    //setters
    public void setCusName(String cusName){
        this.cusName=cusName;
    }
    public void setTel(String tel){
        this.tel=tel;
    }
    public void setAddress(String address){
        this.address=address;
    }
}

import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「客戶」物件加入串列清單中
        arrayList.add(new Customer("張小鈞", "0911-111-111", "宜蘭市經國路38號"));
        arrayList.add(new Customer("沈小廷", "0911-222-222", "桃園縣富國路42號"));
        arrayList.add(new Customer("劉小宏", "0911-333-333", "台中市仁愛路二段120號"));
        arrayList.add(new Customer("林小豪", "0911-444-444", "新竹市永平路一段1號"));
        arrayList.add(new Customer("劉小安", "0911-555-555", "台中市中港路一段78號"));        
		
        //逐一列印客戶資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            Customer c = (Customer)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println(c.getCusName());
            System.out.println(c.getTel());
            System.out.println(c.getAddress());
            System.out.println("--------------------");
        }
    }
}




//2

class Transaction {
    private String date;
    private String cusName;
    private String item;
    private int amount;

    //建構元
    public Transaction(String date, String cusName, String item, int amount){
        this.date=date;
        this.cusName=cusName;
        this.item=item;
        this.amount=amount;
    }
    
    //建構元
    public Transaction(){
        this.date=null;
        this.cusName=null;
        this.item=null;
        this.amount=0;
    } 
    
    //getters
    public String getDate(){
        return this.date;
    }
    
    public String getCusName(){
        return this.cusName;
    }
    
    public String getItem(){
        return this.item;
    }    
    
    public int getAmount(){
        return this.amount;
    }   
    
    //setters
    public void setDate(String date){
        this.date=date;
    }
    public void setCusName(String cusName){
        this.cusName=cusName;
    }
    public void setItem(String item){
        this.item=item;
    }
    
    public void setAmount(int amount){
        this.amount=amount;
    }   
    
    
    
}

import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「交易」物件加入串列清單中
        arrayList.add(new Transaction("2017-10-1", "張小鈞", "智慧手環", 25));
        arrayList.add(new Transaction("2017-10-1", "沈小廷", "USB隨身碟", 40));
        arrayList.add(new Transaction("2017-10-2", "張小鈞", "音樂撥放器", 30));
        arrayList.add(new Transaction("2017-10-3", "林小豪", "光學滑鼠", 10));
        arrayList.add(new Transaction("2017-10-3", "張小鈞", "充電器", 50));        
		
        //逐一列印交易資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            Transaction c = (Transaction)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println(c.getDate());
            System.out.println(c.getCusName());
            System.out.println(c.getItem());
            System.out.println(c.getAmount());
            System.out.println("--------------------");
        }
    }
}

//3


class Employee {
    private String empNo;
    private String empName;
    private int baseSalary;
    private int overHours;

    //建構元
    public Employee(String empNo, String empName, int baseSalary, int overHours){
        this.empNo=empNo;
        this.empName=empName;
        this.baseSalary=baseSalary;
        this.overHours=overHours;
    }
    
    //建構元
    public Employee(){
        this.empNo=null;
        this.empName=null;
        this.baseSalary=0;
        this.overHours=0;
    } 
    
    //getters
    public String getEmpNo(){
        return this.empNo;
    }
    
    public String getEmpName(){
        return this.empName;
    }
    
    public int getBaseSalary(){
        return this.baseSalary;
    }    
    
    public int getOverHours(){
        return this.overHours;
    }   
    
    //setters
    public void setEmpNo(String empNo){
        this.empNo=empNo;
    }
    public void setEmpName(String empName){
        this.empName=empName;
    }
    public void setBaseSalary(int baseSalary){
        this.baseSalary=baseSalary;
    }
    
    public void setOverHours(int overHours){
        this.overHours=overHours;
    }   
    
    public int totalSalary(){
        return baseSalary+overHours*180;
    }
    
}

import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「員工」物件加入串列清單中
        arrayList.add(new Employee("E001", "楊小儱", 34000, 5));
        arrayList.add(new Employee("E002", "陳小永", 35000, 6));
        arrayList.add(new Employee("E003", "宋小運", 41000, 0));
        arrayList.add(new Employee("E004", "方小勳", 36000, 7));
        arrayList.add(new Employee("E005", "劉小言", 39000, 10));        
		
        //逐一列印員工資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            Employee c = (Employee)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println(c.getEmpNo());
            System.out.println(c.getEmpName());
            System.out.println(c.getBaseSalary());
            System.out.println(c.getOverHours());
            System.out.println(c.totalSalary());            
            System.out.println("--------------------");
        }
    }
} 

//4


class PartTimeEmployee {
    private String empNo;
    private String empName;
    private int workHours;

    //建構元
    public PartTimeEmployee(String empNo, String empName, int workHours){
        this.empNo=empNo;
        this.empName=empName;
        this.workHours=workHours;
    }
    
    //建構元
    public PartTimeEmployee(){
        this.empNo=null;
        this.empName=null;
        this.workHours=0;
    } 
    
    //getters
    public String getEmpNo(){
        return this.empNo;
    }
    
    public String getEmpName(){
        return this.empName;
    }
    
    public int getWorkHours(){
        return this.workHours;
    }    
    
    //setters
    public void setEmpNo(String empNo){
        this.empNo=empNo;
    }
    public void setEmpName(String empName){
        this.empName=empName;
    }
    public void setWorkHours(int workHours){
        this.workHours=workHours;
    }
    
    //計算薪水總額, 其值為「時薪」*「本月上班時數」.
	  //其中, 員工編號為「HR」開頭, 時薪350元; 「AC」:330元; 「TR」:370元; 其他:300元.
    public int totalSalary(){
        if(empNo.subSequence(0,2)=="HR"){
            return 350*workHours;
        }else if(empNo.subSequence(0,2)=="AC"){
            return 370*workHours;
        }else{
            return 300*workHours;
        }
    }
    
}

import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「時薪員工」物件加入串列清單中
        arrayList.add(new PartTimeEmployee("HR001", "高小澤", 25));
        arrayList.add(new PartTimeEmployee("HR002", "杜小瑜", 30));
        arrayList.add(new PartTimeEmployee("AC001", "賴小蓁", 23));
        arrayList.add(new PartTimeEmployee("AC002", "廖小晴", 18));
        arrayList.add(new PartTimeEmployee("TR001", "吳小璇", 36));        
		
        //逐一列印時薪員工資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            PartTimeEmployee c = (PartTimeEmployee)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println(c.getEmpNo());
            System.out.println(c.getEmpName());
            System.out.println(c.getWorkHours());
            System.out.println(c.totalSalary());
            System.out.println("--------------------");
        }
    }
}	  


//10b

class ElectricityBill {
    private String cusName;
    private boolean isBusiness;
    private boolean isSummer;
    private int degree;

    //建構元
    public ElectricityBill(String cusName, boolean isBusiness, boolean isSummer, int degree){
        this.cusName=cusName;
        this.isBusiness=isBusiness;
        this.isSummer=isSummer;
        this.degree=degree;
    }
    
    //建構元
    public ElectricityBill(){
        this.cusName=null;
        this.isBusiness=true;
        this.isSummer=true;
        this.degree=0;
    } 
    
    //getters
    public String getCusName(){
        return this.cusName;
    }
    
    public boolean getIsBusiness(){
        return this.isBusiness;
    }
    
    public boolean getIsSummer(){
        return this.isSummer;
    }    
    
    public int getDegree(){
        return this.degree;
    }    
    
    //setters
    public void setCusName(String cusName){
        this.cusName=cusName;
    }
    public void setIsBusiness(boolean isBusiness){
        this.isBusiness=isBusiness;
    }
    public void setIsSummer(boolean isSummer){
        this.isSummer=isSummer;
    }
    public void setDegree(int degree){
        this.degree=degree;
    }
    
    
    public int fee(){
        double b;
        if(isBusiness=true){
            if(isSummer=true){
                if(degree<=330){
                    b=degree*3.76;
                }else if(degree>=331 && degree<=700){
                    b=degree*4.62;
                }else if(degree>=701 && degree<=1500){
                    b=degree*5.48;
                }else{
                    b=degree*6.73;
                }
            }else{
                if(degree<=330){
                    b=degree*3.02;
                }else if(degree>=331 && degree<=700){
                    b=degree*3.68;
                }else if(degree>=701 && degree<=1500){
                    b=degree*4.31;
                }else{
                    b=degree*5.31;
                }
            }
        }else{
            if(isSummer=true){
                if(degree<=120){
                    b=degree*2.10;
                }else if(degree>=121 && degree<=330){
                    b=degree*3.02;
                }else if(degree>=331 && degree<=500){
                    b=degree*4.39;
                }else if(degree>=501 && degree<=700){
                    b=degree*5.44;
                }else if(degree>=701 && degree<=1000){
                    b=degree*6.16;
                }else{
                    b=degree*6.71;
                }
            }else{
                if(degree<=120){
                    b=degree*2.10;
                }else if(degree>=121 && degree<=330){
                    b=degree*3.68;
                }else if(degree>=331 && degree<=500){
                    b=degree*3.61;
                }else if(degree>=501 && degree<=700){
                    b=degree*4.48;
                }else if(degree>=701 && degree<=1000){
                    b=degree*5.03;
                }else{
                    b=degree*5.28;
                }
            }
        }
        
        return (int)b;
    }
    
}

import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「電費」物件加入串列清單中
        arrayList.add(new ElectricityBill("黃小珊", true, true, 200));
        arrayList.add(new ElectricityBill("葉小彤", true, false, 200));
        arrayList.add(new ElectricityBill("何小葶", true, true, 450));
        arrayList.add(new ElectricityBill("劉小君", true, false, 450));
        arrayList.add(new ElectricityBill("郭小于", true, true, 550));        
        arrayList.add(new ElectricityBill("張小婷", false, false, 550)); 
        arrayList.add(new ElectricityBill("鄭小慈", false, true, 750)); 
        arrayList.add(new ElectricityBill("陳小穎", false, false, 750)); 
        arrayList.add(new ElectricityBill("林小佑", false, true, 1200)); 
        arrayList.add(new ElectricityBill("柯小濰", false, false, 1200)); 
		
        //逐一列印電費資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            ElectricityBill c = (ElectricityBill)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println(c.getCusName());
            System.out.println(c.getIsBusiness());
            System.out.println(c.getIsSummer());
            System.out.println(c.fee());			
            System.out.println("--------------------");
        }
    }
}